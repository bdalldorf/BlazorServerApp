@page "/DownloadTikTok"
@using System.Text;
@using RestSharp;

<h3>Download TikToc Video</h3>

<div class="container" @ref=_FileDownloadMainElement>
    <div class="row p-2">
        <div class="col-md-12 d-flex justify-content-center"><input @bind="_URLTextToClean" placeholder="Paste URL here ..." alt="Paste URL here ..." maxlength="1000" style="width:100%;" /></div>
    </div>
    <div class="row p-2">
        <div class="col-md-12 d-flex justify-content-center"><button class="btn btn-primary" @onclick="GetTikTokVideo">Download Video</button></div>
    </div>
    <LoadingOverlayComponent @ref=_LoadingOverlayComponent />
</div>
<div class="row p-2">
    @if (@_URLWithRemovedParameters != string.Empty)
    {
        <div class="col-md-12 d-flex justify-content-center">
            <a href="@_URLWithRemovedParameters" class="btn btn-success" role="button" target="_blank">Open Link</a>
        </div>
    }
</div>
<div class="row p-2">
    @if (@_URLWithRemovedParameters != string.Empty)
    {
        <div class="col-md-12 d-flex justify-content-center text-wrap">@_URLWithRemovedParameters</div>
    }
</div>

@code {
    private string _URLTextToClean { get; set; } = string.Empty;
    private string _URLWithRemovedParameters { get; set; } = string.Empty;

    private LoadingOverlayComponent _LoadingOverlayComponent { get; set; }
    private ElementReference _FileDownloadMainElement { get; set; }

    public void GetTikTokVideo()
    {
        string cleanURI = string.Empty;
        _LoadingOverlayComponent.ShowLoadingOverlay(_FileDownloadMainElement);

        try
        {
            _URLTextToClean = _URLTextToClean.Substring(_URLTextToClean.IndexOf("https://www.tiktok.com"));
            int endOfURLIndex = _URLTextToClean.IndexOf(" ");

            if (endOfURLIndex > 0)
                _URLTextToClean = _URLTextToClean.Substring(0, endOfURLIndex);

            Uri uri = new Uri(_URLTextToClean);

            cleanURI = uri.GetLeftPart(UriPartial.Path);

            var options = new RestClientOptions("https://www.tiktok.com/")
                {
                    MaxTimeout = -1,
                };

            var client = new RestClient(options);
            string url = $"https://api.bdalldorf.tech/apitest/testiktokfiledownload?url={cleanURI}&user=admin";
            var request = new RestRequest(url, Method.Get);
            request.AddHeader("Accept", "*/*");
            request.AddHeader("Accept-Encoding", "gzip, deflate, br");
            request.AddHeader("Accept-Language", "en-US,en;q=0.9");
            request.AddHeader("Connection", "keep-alive");
            RestResponse response = client.Execute(request);

            cleanURI = response.Content;
        }
        catch (Exception exception)
        {

        }
        finally
        {
            _URLWithRemovedParameters = cleanURI;
            _LoadingOverlayComponent.HideLoadingOverlay(_FileDownloadMainElement);
        }
    }
}
